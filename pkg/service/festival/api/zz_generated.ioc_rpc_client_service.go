// Code generated by iocli, run 'iocli gen' to re-generate

package api

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	rpc_client "github.com/alibaba/ioc-golang/extension/autowire/rpc/rpc_client"

	"github.com/ioc-golang/shopping-system/pkg/model/do"
	"github.com/ioc-golang/shopping-system/pkg/model/dto"
)

func init() {
	rpc_client.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &serviceIOCRPCClient{}
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	})
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &serviceIOCRPCClient_{}
		},
	})
}

type serviceIOCRPCClient_ struct {
	ListCachedCards_        func(uid int64, num int) ([]dto.Card, error)
	ListCards_              func(uid int64, num int) ([]dto.Card, error)
	getCachedProductDetail_ func(id int64) (*do.ProductDetailDO, error)
	getCachedAds_           func(id int64) (*do.AdvertisementDO, error)
	cacheProductDetail_     func(id int64, product *do.ProductDetailDO) error
	cacheAss_               func(id int64, ads *do.AdvertisementDO) error
	getProductDetail_       func(id int64) (*do.ProductDetailDO, error)
	getAds_                 func(id int64) (*do.AdvertisementDO, error)
}

func (s *serviceIOCRPCClient_) ListCachedCards(uid int64, num int) ([]dto.Card, error) {
	return s.ListCachedCards_(uid, num)
}

func (s *serviceIOCRPCClient_) ListCards(uid int64, num int) ([]dto.Card, error) {
	return s.ListCards_(uid, num)
}

func (s *serviceIOCRPCClient_) getCachedProductDetail(id int64) (*do.ProductDetailDO, error) {
	return s.getCachedProductDetail_(id)
}

func (s *serviceIOCRPCClient_) getCachedAds(id int64) (*do.AdvertisementDO, error) {
	return s.getCachedAds_(id)
}

func (s *serviceIOCRPCClient_) cacheProductDetail(id int64, product *do.ProductDetailDO) error {
	return s.cacheProductDetail_(id, product)
}

func (s *serviceIOCRPCClient_) cacheAss(id int64, ads *do.AdvertisementDO) error {
	return s.cacheAss_(id, ads)
}

func (s *serviceIOCRPCClient_) getProductDetail(id int64) (*do.ProductDetailDO, error) {
	return s.getProductDetail_(id)
}

func (s *serviceIOCRPCClient_) getAds(id int64) (*do.AdvertisementDO, error) {
	return s.getAds_(id)
}

type ServiceIOCRPCClient interface {
	ListCachedCards(uid int64, num int) ([]dto.Card, error)
	ListCards(uid int64, num int) ([]dto.Card, error)
	getCachedProductDetail(id int64) (*do.ProductDetailDO, error)
	getCachedAds(id int64) (*do.AdvertisementDO, error)
	cacheProductDetail(id int64, product *do.ProductDetailDO) error
	cacheAss(id int64, ads *do.AdvertisementDO) error
	getProductDetail(id int64) (*do.ProductDetailDO, error)
	getAds(id int64) (*do.AdvertisementDO, error)
}

type serviceIOCRPCClient struct {
	ListCachedCards        func(uid int64, num int) ([]dto.Card, error)
	ListCards              func(uid int64, num int) ([]dto.Card, error)
	getCachedProductDetail func(id int64) (*do.ProductDetailDO, error)
	getCachedAds           func(id int64) (*do.AdvertisementDO, error)
	cacheProductDetail     func(id int64, product *do.ProductDetailDO) error
	cacheAss               func(id int64, ads *do.AdvertisementDO) error
	getProductDetail       func(id int64) (*do.ProductDetailDO, error)
	getAds                 func(id int64) (*do.AdvertisementDO, error)
}
